import streamlit as st
import pandas as pd
import re

st.set_page_config(layout="wide")
st.title("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è: –®–∏—Ä–æ–∫–∏–π —Ñ–æ—Ä–º–∞—Ç -> –ü–ª–æ—Å–∫–∏–π")

# --- 1. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞ "—à–∏—Ä–æ–∫–æ–≥–æ" DataFrame ---
# –≠—Ç–æ –∏–º–∏—Ç–∏—Ä—É–µ—Ç –≤–∞—à –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª "–ü–ª–∞–Ω"
data = {
    '–ê—Ä—Ç–∏–∫—É–ª': ['ART001', 'ART002', 'ART003'],
    '–û–ø–∏—Å–∞–Ω–∏–µ': ['–ö—Ä–æ—Å—Å–æ–≤–∫–∏', '–ë–æ—Ç–∏–Ω–∫–∏', '–°–∞–Ω–¥–∞–ª–∏–∏'],
    '–¶–µ–Ω–∞': [1500, 2200, 800],
    '–ë—Ä–µ–Ω–¥': ['Nike', 'Timberland', 'Ecco'],
    '1_Plan_STUKI': [10, 5, 12],
    '1_Plan_GRN': [15000, 11000, 9600],
    '2_Plan_STUKI': [8, 0, 15],
    '2_Plan_GRN': [12000, 0, 12000],
    '15_Plan_STUKI': [20, 8, 5],
    '15_Plan_GRN': [30000, 17600, 4000]
}
wide_df = pd.DataFrame(data)

st.header("–ò—Å—Ö–æ–¥–Ω–∞—è '—à–∏—Ä–æ–∫–∞—è' —Ç–∞–±–ª–∏—Ü–∞")
st.dataframe(wide_df)
st.markdown("---")

# --- 2. –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
st.header("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è")

all_columns = wide_df.columns.tolist()

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç –∫–æ–ª–æ–Ω–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –æ–ø–∏—Å—ã–≤–∞—é—Ç —Ç–æ–≤–∞—Ä
id_vars = st.multiselect(
    "–®–∞–≥ 1: –í—ã–±–µ—Ä–∏—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏ (—Ç–µ, —á—Ç–æ –Ω–µ –º–µ–Ω—è—é—Ç—Å—è –æ—Ç –º–∞–≥–∞–∑–∏–Ω–∞ –∫ –º–∞–≥–∞–∑–∏–Ω—É)",
    options=all_columns,
    default=['–ê—Ä—Ç–∏–∫—É–ª', '–û–ø–∏—Å–∞–Ω–∏–µ', '–¶–µ–Ω–∞', '–ë—Ä–µ–Ω–¥']
)

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∫–∞–∑—ã–≤–∞–µ—Ç —Å—É—Ñ—Ñ–∏–∫—Å—ã
col1, col2 = st.columns(2)
with col1:
    suffix_stuki = st.text_input("–®–∞–≥ 2: –£–∫–∞–∂–∏—Ç–µ —Å—É—Ñ—Ñ–∏–∫—Å –¥–ª—è –ø–ª–∞–Ω–æ–≤—ã—Ö —à—Ç—É–∫", value="_Plan_STUKI")
with col2:
    suffix_grn = st.text_input("–®–∞–≥ 3: –£–∫–∞–∂–∏—Ç–µ —Å—É—Ñ—Ñ–∏–∫—Å –¥–ª—è –ø–ª–∞–Ω–æ–≤—ã—Ö –≥—Ä–∏–≤–µ–Ω", value="_Plan_GRN")

if st.button("üöÄ –ù–∞—á–∞—Ç—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ"):

    if not id_vars or not suffix_stuki or not suffix_grn:
        st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
    else:
        # --- 3. –≠—Ç–∞–ø 1: pd.melt() (Unpivot) ---
        st.subheader("–≠—Ç–∞–ø 1: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ `melt` –¥–ª—è '—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è' —Ç–∞–±–ª–∏—Ü—ã")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–æ–Ω–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ "—Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å"
        value_vars = [col for col in wide_df.columns if col not in id_vars]

        if not value_vars:
            st.error("–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—ã–±–æ—Ä –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫.")
        else:
            melted_df = pd.melt(
                wide_df,
                id_vars=id_vars,
                value_vars=value_vars,
                var_name='temp_variable',
                value_name='value'
            )
            st.info(f"–¢–∞–±–ª–∏—Ü–∞ '—Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–∞'. –¢–µ–ø–µ—Ä—å —É –Ω–∞—Å {len(melted_df)} —Å—Ç—Ä–æ–∫.")
            st.dataframe(melted_df)
            st.markdown("---")

            # --- 4. –≠—Ç–∞–ø 2: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ ---
            st.subheader("–≠—Ç–∞–ø 2: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ '–ú–∞–≥–∞–∑–∏–Ω–∞' –∏ '–¢–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö' –∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∫–æ–ª–æ–Ω–∫–∏")

            # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å SettingWithCopyWarning
            extracted_df = melted_df.copy()

            # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–∞ –∏ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö
            def extract_info(variable_name):
                # –ò—â–µ–º —á–∏—Å–ª–æ –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–æ–∫–∏ - —ç—Ç–æ –∏ –µ—Å—Ç—å –Ω–æ–º–µ—Ä –º–∞–≥–∞–∑–∏–Ω–∞
                match = re.match(r'^(\d+)', variable_name)
                if match:
                    store_id = match.group(1)
                    # –í—Å–µ, —á—Ç–æ –ø–æ—Å–ª–µ –Ω–æ–º–µ—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–∞ –∏ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è - —ç—Ç–æ —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö
                    data_type = variable_name[len(store_id)+1:]
                    return store_id, data_type
                return None, None
            
            # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∫ –∫–æ–ª–æ–Ω–∫–µ 'temp_variable'
            extracted_df[['–º–∞–≥–∞–∑–∏–Ω', '–¢–∏–ø_–¥–∞–Ω–Ω—ã—Ö']] = extracted_df['temp_variable'].apply(
                lambda x: pd.Series(extract_info(x))
            )
            
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –∫–æ–ª–æ–Ω–∫—É
            extracted_df = extracted_df.drop(columns=['temp_variable'])
            
            st.info("–°–æ–∑–¥–∞–Ω—ã –Ω–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏ '–º–∞–≥–∞–∑–∏–Ω' –∏ '–¢–∏–ø_–¥–∞–Ω–Ω—ã—Ö'.")
            st.dataframe(extracted_df)
            st.markdown("---")

            # --- 5. –≠—Ç–∞–ø 3: pivot_table() –¥–ª—è —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É ---
            st.subheader("–≠—Ç–∞–ø 3: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ `pivot_table` –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫")
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è —Å–≤–æ–¥–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã - —ç—Ç–æ –≤—Å–µ, –∫—Ä–æ–º–µ –∫–æ–ª–æ–Ω–æ–∫ —Å —Ç–∏–ø–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö –∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
            pivot_index = id_vars + ['–º–∞–≥–∞–∑–∏–Ω']
            
            try:
                pivoted_df = pd.pivot_table(
                    extracted_df,
                    index=pivot_index,
                    columns='–¢–∏–ø_–¥–∞–Ω–Ω—ã—Ö',
                    values='value',
                    aggfunc='first' # –ò—Å–ø–æ–ª—å–∑—É–µ–º 'first', —Ç–∞–∫ –∫–∞–∫ –Ω–∞ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–∏ –≤—Å–µ–≥–¥–∞ –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ
                ).reset_index()

                # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –æ—Å–Ω–æ–≤–Ω–æ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
                final_df = pivoted_df.rename(columns={
                    suffix_stuki[1:]: 'Plan_STUKI', # –£–±–∏—Ä–∞–µ–º '_' –≤ –Ω–∞—á–∞–ª–µ
                    suffix_grn[1:]: 'Plan_GRN'
                })
                
                # --- 6. –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç ---
                st.subheader("‚úÖ –ì–æ—Ç–æ–≤–∞—è '–ø–ª–æ—Å–∫–∞—è' —Ç–∞–±–ª–∏—Ü–∞")
                st.info("–≠—Ç–∞ —Ç–∞–±–ª–∏—Ü–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è —Å–ª–∏—è–Ω–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ —Ñ–∞–π–ª–∞ '–§–∞–∫—Ç'.")
                st.dataframe(final_df)
                
            except Exception as e:
                st.error(f"–û—à–∏–±–∫–∞ –Ω–∞ —ç—Ç–∞–ø–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å–≤–æ–¥–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã: {e}")
                st.warning("–í–æ–∑–º–æ–∂–Ω–æ, –≤ –¥–∞–Ω–Ω—ã—Ö –µ—Å—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å —Ñ–æ—Ä–º–∞—Ç–æ–º –Ω–∞–∑–≤–∞–Ω–∏–π –∫–æ–ª–æ–Ω–æ–∫.")
